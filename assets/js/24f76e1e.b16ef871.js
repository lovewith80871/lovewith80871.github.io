"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3720],{3905:(e,t,a)=>{a.d(t,{Zo:()=>o,kt:()=>m});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function u(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=r.createContext({}),p=function(e){var t=r.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},o=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,c=e.parentName,o=u(e,["components","mdxType","originalType","parentName"]),s=p(a),m=n,h=s["".concat(c,".").concat(m)]||s[m]||d[m]||l;return a?r.createElement(h,i(i({ref:t},o),{},{components:a})):r.createElement(h,i({ref:t},o))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=s;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u.mdxType="string"==typeof e?e:n,i[1]=u;for(var p=2;p<l;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}s.displayName="MDXCreateElement"},6144:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>u,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));const l={},i="Tree",u={unversionedId:"dataStructure/06tree",id:"dataStructure/06tree",title:"Tree",description:"Introduce tree",source:"@site/docs/dataStructure/06tree.md",sourceDirName:"dataStructure",slug:"/dataStructure/06tree",permalink:"/docs/dataStructure/06tree",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/dataStructure/06tree.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Stacks and Queues",permalink:"/docs/dataStructure/05stacks_queues"},next:{title:"Graphs",permalink:"/docs/dataStructure/07graphs"}},c={},p=[{value:"Introduce tree",id:"introduce-tree",level:2},{value:"Introduce binary tree",id:"introduce-binary-tree",level:2},{value:"Rules",id:"rules",level:3},{value:"Introduce Perfect Binary Tree and Full Binary Tree",id:"introduce-perfect-binary-tree-and-full-binary-tree",level:2},{value:"Full Binary Tree",id:"full-binary-tree",level:3},{value:"Complete Binary Tree",id:"complete-binary-tree",level:3},{value:"Big O",id:"big-o",level:2},{value:"Binary search tree",id:"binary-search-tree",level:2},{value:"Rules",id:"rules-1",level:3},{value:"Balanced vs unbalanced",id:"balanced-vs-unbalanced",level:3},{value:"Pros and Cons",id:"pros-and-cons",level:3},{value:"Balanced BST example",id:"balanced-bst-example",level:3},{value:"Binary Heep",id:"binary-heep",level:2},{value:"\u7279\u6027",id:"\u7279\u6027",level:3},{value:"Priority queue",id:"priority-queue",level:2},{value:"\u7279\u6027",id:"\u7279\u6027-1",level:3}],o={toc:p};function d(e){let{components:t,...l}=e;return(0,n.kt)("wrapper",(0,r.Z)({},o,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"tree"},"Tree"),(0,n.kt)("h2",{id:"introduce-tree"},"Introduce tree"),(0,n.kt)("p",null,"\u6700\u5ee3\u7fa9\u7684 tree \u7684\u5b9a\u7fa9\u4e26\u7121\u898f\u5b9a\u4e00\u500b\u7bc0\u9ede\u80fd\u6709\u591a\u5c11\u500b\u5b50\u7bc0\u9ede"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"tree",src:a(7568).Z,width:"902",height:"428"})),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"introduce-binary-tree"},"Introduce binary tree"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"binary_tree",src:a(5533).Z,width:"1185",height:"660"})),(0,n.kt)("h3",{id:"rules"},"Rules"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Each node can only have x child node ( 2 >= x >= 0 )"),(0,n.kt)("li",{parentName:"ul"},"Children could have ",(0,n.kt)("strong",{parentName:"li"},"only one")," parent node")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"introduce-perfect-binary-tree-and-full-binary-tree"},"Introduce Perfect Binary Tree and Full Binary Tree"),(0,n.kt)("p",null,"\u9019\u908a\u8981\u6ce8\u610f\u540d\u8a5e\u5b9a\u7fa9\uff0c\u9019\u908a\u5f71\u7247\u7684\u540d\u8a5e\u5b9a\u7fa9\u8ddf\u5176\u4ed6\u4eba\u6709\u51fa\u5165\uff0c\u5176\u4ed6\u8cc7\u8a0a\u53ef\u53c3\u8003 ",(0,n.kt)("a",{parentName:"p",href:"http://alrightchiu.github.io/SecondRound/binary-tree-introjian-jie.html"},"\u9019\u88cf")),(0,n.kt)("h3",{id:"full-binary-tree"},"Full Binary Tree"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"full_tree",src:a(1378).Z,width:"774",height:"416"})),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Full Binary Tree:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\u6240\u6709 parent node \u90fd\u6709\u5169\u500b child node"),(0,n.kt)("li",{parentName:"ul"},"\u6240\u6709 leaf \u90fd\u5177\u6709\u76f8\u540c\u7684 level"),(0,n.kt)("li",{parentName:"ul"},"\u7531\u4ee5\u4e0a\u53ef\u63a8\u77e5",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"leaf node \u7684 level \u70ba n \u6545 \u6574\u68f5\u6a39\u6709 2^n - 1 \u500b node\uff0c\u4f8b level \u70ba 3\uff0c\u6574\u68f5\u6a39\u4fbf\u6709 7 \u500b node")))))),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"complete-binary-tree"},"Complete Binary Tree"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"complete_tree",src:a(9451).Z,width:"472",height:"404"})),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Complete Binary Tree:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\u82e5\u4e00\u68f5\u6a39\u9ad8\u5ea6\u70ba h \uff0c\u5230 h-1 \u9ad8\u5ea6\u7686\u70ba full node\uff0c\u5728 h \u9ad8\u5ea6\u6642\uff0cnode \u662f\u7531\u5de6\u6392\u5230\u53f3\u3002")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"big-o"},"Big O"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"tree_bigO",src:a(5267).Z,width:"1157",height:"647"})),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"binary-search-tree"},"Binary search tree"),(0,n.kt)("h3",{id:"rules-1"},"Rules"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Left child is smaller than parent node"),(0,n.kt)("li",{parentName:"ul"},"Right child is bigger than parent node")),(0,n.kt)("h3",{id:"balanced-vs-unbalanced"},"Balanced vs unbalanced"),(0,n.kt)("p",null,"\u200b Balanced \u5b83\u662f\u4e00\u7a2e\u6bcf\u500b\u7bc0\u9ede\u7684\u5de6\u53f3\u5169\u5b50\u6a39\u9ad8\u5ea6\u5dee\u90fd\u4e0d\u8d85\u904e\u4e00\u7684","[\u4e8c\u5143\u6a39]","\uff0c\u82e5\u4e0d\u5e73\u8861\u5247\u6703\u5c0e\u81f4 \u6642\u9593\u8907\u96dc\u5ea6\u8b8a\u5f88\u5dee\n",(0,n.kt)("img",{alt:"binary_tree_unbalanced",src:a(7397).Z,width:"811",height:"637"})),(0,n.kt)("h3",{id:"pros-and-cons"},"Pros and Cons"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"tree_pros_cons",src:a(31).Z,width:"826",height:"490"})),(0,n.kt)("h3",{id:"balanced-bst-example"},"Balanced BST example"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"AVL Tree"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.cs.usfca.edu/~galles/visualization/AVLtree.html"},"Animation")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://medium.com/basecs/the-little-avl-tree-that-could-86a3cae410c7"},"How\xa0it\xa0work")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Red black tree"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.cs.usfca.edu/~galles/visualization/RedBlack.html"},"Animation")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://medium.com/basecs/painting-nodes-black-with-red-black-trees-60eacb2be9a5"},"How it Works"))))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"binary-heep"},"Binary Heep"),(0,n.kt)("h3",{id:"\u7279\u6027"},"\u7279\u6027"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"\u6bcf\u500b node \u6700\u591a\u6709\u5169\u500b child")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"\u540c\u4e00\u968e\u5c64\u8981\u5f9e\u5de6\u5230\u53f3\uff0c\u4e0d\u80fd\u8df3\u904e")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"\u5982\u679c\u662f max heap \u7684\u8a71 \u6bcf\u500b node \u8981\u6bd4\u5b50 node \u9084\u8981\u5927\uff0cmin heap \u5247\u53cd\u4e4b")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"\u5982\u679c\u662f max heap \u7684\u8a71 root \u5c31\u6703\u662f\u9019\u500b heap \u7684\u6700\u5927\u503c")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"\u5099\u8a3b binary heap \u8ddf javascript heap memory \u6c92\u6709\u95dc\u4fc2")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"\u672c\u8cea\u4f86\u8aaa \u662f\u4e00\u500b\u5b8c\u5168\u4e8c\u5143\u6a39 (completed binary tree)\uff0c\u4e5f\u56e0\u70ba\u662f\u5b8c\u5168\u4e8c\u5143\u6a39\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7528 array \u4f86\u5be6\u73fe\uff0c\u6bcf\u4e00\u500b node \u7684\u5de6 child \u5c31\u662f 2","*","parent + 1")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"\u5728\u63d2\u5165\u503c\u6642\uff0c\u6703\u5f9e\u6700\u4e0b\u5c64\u958b\u59cb\uff0c\u7136\u5f8c\u4f9d\u5e8f\u6bd4\u8f03\u6bcf\u5c64\u7684\u6578\u5b57\uff0c\u6c7a\u5b9a\u4e0a\u6d6e\u5230\u7b2c\u5e7e\u5c64\uff0c",(0,n.kt)("a",{parentName:"p",href:"https://visualgo.net/en/heap?slide=1"},"\u5c55\u793a"),"\n",(0,n.kt)("img",{alt:"binary_heap",src:a(9664).Z,width:"1170",height:"638"}),"\n",(0,n.kt)("img",{alt:"binary_heap_con",src:a(8906).Z,width:"833",height:"533"})))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"priority-queue"},"Priority queue"),(0,n.kt)("h3",{id:"\u7279\u6027-1"},"\u7279\u6027"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\u9700\u8981\u6700\u5927 or \u6700\u5c0f\u7684\u503c\u5148\u51fa\uff0c\u56e0\u6b64\u9069\u5408\u7528 binary heap \u7684\u65b9\u5f0f\u3002"),(0,n.kt)("li",{parentName:"ul"},"\u9069\u5408\u7528 binary heap \u4f86\u5be6\u4f5c")))}d.isMDXComponent=!0},9664:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/binary_heap-7b1b206e459cb89338160b86f01d3f82.png"},8906:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/binary_heap_con-64e3184a3b25672dee7aa3e5a3cd7f66.png"},5533:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/binary_tree-7a8dd963792eba404149fff6282edac6.png"},7397:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/binary_tree_unbalanced-c0c13c0b2761258e1be5ef5618c6974f.png"},9451:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/complete_tree-682bd9f98d0074457f8bd098c708d0d7.png"},1378:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/full_tree-337bdccf33f920b7675cba59cdfa3f9c.png"},7568:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/tree-730121a223c89f8b3aab3de4c0e4b163.png"},5267:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/tree_bigO-faa174e5ffc0906ecef498d36bb03e59.png"},31:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/tree_pros_cons-e00a78614a7a33876f2a7fe242d3f402.png"}}]);