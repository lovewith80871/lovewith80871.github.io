"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9505],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>d});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),m=c(t),d=i,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||a;return t?r.createElement(f,o(o({ref:n},l),{},{components:t})):r.createElement(f,o({ref:n},l))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=m;var u={};for(var s in n)hasOwnProperty.call(n,s)&&(u[s]=n[s]);u.originalType=e,u.mdxType="string"==typeof e?e:i,o[1]=u;for(var c=2;c<a;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6968:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>u,toc:()=>c});var r=t(7462),i=(t(7294),t(3905));const a={},o="Recurision",u={unversionedId:"dataStructure/08recurision",id:"dataStructure/08recurision",title:"Recurision",description:"\u7279\u6027",source:"@site/docs/dataStructure/08recurision.md",sourceDirName:"dataStructure",slug:"/dataStructure/08recurision",permalink:"/docs/dataStructure/08recurision",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/dataStructure/08recurision.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Graphs",permalink:"/docs/dataStructure/07graphs"},next:{title:"Sort",permalink:"/docs/dataStructure/09sort"}},s={},c=[{value:"\u7279\u6027",id:"\u7279\u6027",level:2},{value:"Recursion vs Iterative",id:"recursion-vs-iterative",level:2},{value:"When to use recursion",id:"when-to-use-recursion",level:2},{value:"Exapmple",id:"exapmple",level:2},{value:"Review",id:"review",level:2}],l={toc:c};function p(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"recurision"},"Recurision"),(0,i.kt)("h2",{id:"\u7279\u6027"},"\u7279\u6027"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Recursion \u662f\u6307 function \u672c\u8eab\u547c\u53eb\u81ea\u8eab function\u3002"),(0,i.kt)("li",{parentName:"ul"},"\u82e5 \u7121\u6b62\u76e1\u7684\u547c\u53eb\u81ea\u8eab function \u5247\u6703\u9020\u6210 stack overflow")),(0,i.kt)("p",null,"Try to write one"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"let counter = 0;\nfunction inception() {\n  if (counter > 3) {\n    return 'done';\n  }\n  counter++;\n  inception(); //\n}\ninception();\n")),(0,i.kt)("p",null,"\u4e0a\u9762\u9019\u5247 recurision \u6709\u4ec0\u9ebc\u554f\u984c\u55ce\uff1f\nA: \u4ed6\u53ea\u6709\u5728\u6700\u88e1\u5c64\u7684\u6642\u5019\u6703 return 'done'\uff0c\u958b\u59cb\u5f80\u5916\u5c64\u50b3\u905e\u6642\uff0c\u5c31\u4e0d\u6703\u5728 return done \u4e86\u3002\u6545\u9700\u8981\u6ce8\u610f \u6700\u5f8c return \u7684 value \u9700\u8981\u4e00\u76f4\u5f80\u6700\u5916\u5c64\u5e36\uff0c\u53ef\u4ee5\u6539\u6210\u5982\u4ee5\u4e0b\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"let counter = 0;\nfunction inception() {\n  if (counter > 3) {\n    //if counter > 3; base case\n    return 'done';\n  }\n  counter++;\n  return inception(); // if counter < 3; recurisive case\n}\ninception();\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"\u5728\u5beb recurision \u8981\u6ce8\u610f\u4ee5\u4e0b\u4e09\u4ef6\u4e8b"))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Identify the ",(0,i.kt)("strong",{parentName:"li"},"base case")),(0,i.kt)("li",{parentName:"ul"},"Identify the ",(0,i.kt)("strong",{parentName:"li"},"recurisive case")),(0,i.kt)("li",{parentName:"ul"},"get closer and closer and return when needed. ",(0,i.kt)("strong",{parentName:"li"},"Usually you have 2 returns"))),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"recursion-vs-iterative"},"Recursion vs Iterative"),(0,i.kt)("p",null,"Anything you do with a recursion CAN be done iteratively (loop)"),(0,i.kt)("p",null,"Recursion \u53ef\u4ee5\u8b93 code \u770b\u8d77\u4f86\u66f4 \u7c21\u6f54\u6709\u529b\u3001\u6613\u8b80\u3002\u4f46\u662f\u91cd\u8907\u7684 recursion \u6703\u8b93 stack size \u8d8a\u4f86\u8d8a\u5927\u3002 \u5728 \u4e0d\u77e5\u9053 data structure \u591a\u6df1\u591a\u5927\u7684\u60c5\u6cc1\uff0c\u7528 recursion \u53bb loop \u662f\u6bd4\u8f03\u597d\u7684\u65b9\u5f0f\uff08\u4f8b\u5982 tree traversal\uff09"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"when-to-use-recursion"},"When to use recursion"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"every time you are useing a tree or converting Something into a tree, consider recursion.")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"exapmple"},"Exapmple"),(0,i.kt)("p",null,"Fibonacci"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Click me show the codes"),(0,i.kt)("p",null,(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// Given a number N return the index value of the Fibonacci sequence, where the sequence is:\n\n// 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144 ...\n// the pattern of the sequence is that each value is the sum of the 2 previous values, that means that for N=5 \u2192 2+3\n\n//For example: fibonacciRecursive(6) should return 8\n\nfunction fibonacciRecursive(n) {\n  // Recursive for Big-O (2^n)\n  if (n === 0) return 0;\n  if (n === 1) return 1;\n  return fibonacciRecursive(n - 1) + fibonacciRecursive(n - 2);\n}\n\nconst b = fibonacciRecursive(10);\nconsole.log(b);\n\nfunction fibonacciIterative(n) {\n  // Iterative for Big-O(n)\n  if (n === 0) return 0;\n  if (n === 1) return 1;\n  let a = 0;\n  let b = 1;\n  let c = a + b;\n  for (let i = 2; i < n; i++) {\n    const tmp = c;\n    c = c + b;\n    b = tmp;\n  }\n  return c;\n}\nconst a = fibonacciIterative(10);\nconsole.log(a);\n")))),(0,i.kt)("p",null,"Reverse string"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Click me show the codes"),(0,i.kt)("p",null,(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"//Implement a function that reverses a string using iteration...and then recursion!\nfunction reverseString(str) {\n  let str_split = str.split('');\n  let res = [];\n  for (let i = str_split.length - 1; i >= 0; i--) {\n    res.push(str_split[i]);\n  }\n  return res.join('');\n}\n\nfunction reverseStringRecursion(str, stack = []) {\n  if (str.split('').length === 0) {\n    return stack.join('');\n  }\n  const str_split = str.split('');\n  const tmp = str_split.pop();\n  const lastStr = str_split.join('');\n  stack.push(tmp);\n  return reverseStringRecursion(lastStr, stack);\n}\n\nconsole.log(reverseStringRecursion('yoyo mastery'));\n\n//should return: 'yretsam oyoy'\n")))),(0,i.kt)("p",null,"Factories"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Click me show the codes"),(0,i.kt)("p",null,(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// Write two functions that finds the factorial of any number. One should use recursive, the other should just use a for loop\n\n// 5! = 5*4*3*2*1\n\nfunction findFactorialRecursive(number) {\n  if (number > 0) {\n    return number * findFactorialRecursive(number - 1);\n  }\n  return 1;\n}\nconsole.log(findFactorialRecursive(5));\n\nfunction findFactorialIterative(number) {\n  let answer = 1;\n  for (let i = number; i > 0; i--) {\n    answer = answer * i;\n  }\n  return answer;\n}\n")))),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"review"},"Review"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"recursion is interesting and clever, but can be costly.")," and any thing you do with recursion can also use in Iterative"),(0,i.kt)("p",null,"some times we use recursion to make thing simpler"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Merge sort"),(0,i.kt)("li",{parentName:"ul"},"quick sort"),(0,i.kt)("li",{parentName:"ul"},"trree traversal"),(0,i.kt)("li",{parentName:"ul"},"graph traversal")))}p.isMDXComponent=!0}}]);